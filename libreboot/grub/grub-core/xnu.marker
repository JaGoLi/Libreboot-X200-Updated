INPUT_TERMINAL_LIST_MARKER(const char *name __attribute__ ((unused)), grub_term_input_t term)
OUTPUT_TERMINAL_LIST_MARKER(const char *name __attribute__ ((unused)), grub_term_output_t term)
COMMAND_LIST_MARKER(const char *name, grub_command_func_t func, const char *summary, const char *description)
P1COMMAND_LIST_MARKER(const char *name, grub_command_func_t func, const char *summary, const char *description)
INPUT_TERMINAL_LIST_MARKER(const char *name __attribute__ ((unused)), grub_term_input_t term)
OUTPUT_TERMINAL_LIST_MARKER(const char *name __attribute__ ((unused)), grub_term_output_t term)
COMMAND_LIST_MARKER(const char *name, grub_command_func_t func, const char *summary, const char *description)
P1COMMAND_LIST_MARKER(const char *name, grub_command_func_t func, const char *summary, const char *description)
  cmd_devprop_load = COMMAND_LIST_MARKER("xnu_devprop_load", grub_cmd_devprop_load, 0, "Load `device-properties' dump.")
COMMAND_LIST_MARKER(const char *name, grub_command_func_t func, const char *summary, const char *description)
P1COMMAND_LIST_MARKER(const char *name, grub_command_func_t func, const char *summary, const char *description)
grub_extcmd_t EXTCOMMAND_LIST_MARKER(const char *name, grub_extcmd_func_t func, grub_command_flags_t flags, const char *summary, const char *description, const struct grub_arg_option *parser)
  cmd_kernel = COMMAND_LIST_MARKER("xnu_kernel", grub_cmd_xnu_kernel, 0, "Load XNU image.")
  cmd_kernel64 = COMMAND_LIST_MARKER("xnu_kernel64", grub_cmd_xnu_kernel64, 0, "Load 64-bit XNU image.")
  cmd_mkext = COMMAND_LIST_MARKER("xnu_mkext", grub_cmd_xnu_mkext, 0, "Load XNU extension package.")
  cmd_kext = COMMAND_LIST_MARKER("xnu_kext", grub_cmd_xnu_kext, 0, "Load XNU extension.")
  cmd_kextdir = COMMAND_LIST_MARKER("xnu_kextdir", grub_cmd_xnu_kextdir, "DIRECTORY [OSBundleRequired]", "Load XNU extension directory.")
  cmd_ramdisk = COMMAND_LIST_MARKER("xnu_ramdisk", grub_cmd_xnu_ramdisk, 0, "Load XNU ramdisk. " "It will be available in OS as md0.")
  cmd_splash = EXTCOMMAND_LIST_MARKER("xnu_splash", grub_cmd_xnu_splash, 0, 0, "Load a splash image for XNU.", xnu_splash_cmd_options)
  cmd_resume = COMMAND_LIST_MARKER("xnu_resume", grub_cmd_xnu_resume, 0, "Load an image of hibernated" " XNU.")
